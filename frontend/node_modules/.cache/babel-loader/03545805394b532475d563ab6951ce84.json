{"ast":null,"code":"var _jsxFileName = \"/home/aishwarya/Desktop/Updated_backend/mini-twitter/frontend/src/components/Tweets.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Small_logo from \"./images/Small_logo.jpg\";\nimport './tweet.css';\nimport history from '../history';\nimport TwitterLogo from \"./images/twitter.png\";\nexport class Tweets extends Component {\n  constructor(props) {\n    super(props);\n\n    this.usernamechange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.tweetcreate = () => {\n      axios.post(\"http://127.0.0.1:8000/tweets/create/\", this.state).then(response => {\n        console.log(response);\n      }).catch(e => {\n        if (e.response.status = \"400\") {\n          this.setState({\n            message: e.response.data[\"message\"]\n          });\n        }\n\n        console.log(e.response);\n      });\n    };\n\n    this.showtweets = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n\n    this.searchapi = () => {\n      axios.post(\"http://127.0.0.1:8000/search/\", this.state).then(response => {\n        console.log(response);\n\n        if (response.status = \"200\") {\n          const userarray = response.data;\n          console.log(userarray);\n          this.setState({\n            userdata: userarray\n          });\n          console.log(this.state.userdata);\n        }\n      }).catch(error => {\n        console.log(error.response);\n        this.setState({\n          error_message: error.response.data[\"message\"]\n        });\n      });\n      console.log(this.state.token);\n    };\n\n    this.changeserach = event => {\n      this.setState({\n        query: event.target.value\n      });\n    };\n\n    this.followusers = (followfield, nameuser) => {\n      const obj = {\n        follow: followfield,\n        username: nameuser,\n        token: this.state.token\n      };\n\n      if (obj.follow == 1) {\n        axios.post(\"http://127.0.0.1:8000/unfollow/\", obj).then(response => {\n          console.log(response.data);\n        }).catch(error => {\n          console.log(error.response);\n        });\n      } else {\n        axios.post(\"http://127.0.0.1:8000/follow/\", obj).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error.response);\n        });\n      }\n    };\n\n    this.state = {\n      token: localStorage.getItem(\"token\"),\n      content: \"\",\n      tweets: [],\n      username: \"\",\n      message: \"\",\n      message2: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      userdata: [],\n      query: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.post(\"http://127.0.0.1:8000/profile/\", this.state).then(response => {\n      if (response.status = \"200\") {\n        this.setState({\n          username: response.data[\"username\"]\n        });\n        this.setState({\n          first_name: response.data[\"first_name\"]\n        });\n        this.setState({\n          last_name: response.data[\"last_name\"]\n        });\n      }\n    });\n    axios.post(\" http://127.0.0.1:8000/tweets/\", this.state).then(response => {\n      console.log(response);\n\n      if (response.status = \"200\") {\n        this.setState({\n          tweets: response.data\n        });\n      } //   if(response.status=\"204\"){\n      //       this.setState({message2:\"zero tweets found\"})\n      //   }\n\n    }).catch(error => {\n      if (error.response.status = \"204\") {\n        this.setState({\n          message2: \"Zero Tweets Found\"\n        });\n      }\n\n      if (error.response.status = \"400\") this.setState({\n        message: error.response.data[\"message\"]\n      });\n      console.log(error.response);\n    });\n  }\n\n  removeitem() {\n    localStorage.removeItem(\"token\");\n    {\n      history.push(\"/Login\");\n    }\n  }\n\n  render() {\n    const {\n      content,\n      tweets,\n      message,\n      username,\n      message2,\n      first_name,\n      last_name,\n      userdata,\n      query\n    } = this.state;\n    const {\n      text,\n      match: {\n        params\n      }\n    } = t;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }) //         <div>\n    //         <div className=\"leftpart\">\n    //         <button className=\"change homebutton\" onClick={()=>{history.push(\"/Timeline\")}}><i class=\"fa fa-home\"></i>Home</button>\n    //         <div className=\"twitter_logo\"><img src={TwitterLogo} ></img></div>  \n    //         <br/>\n    //         <br/>\n    //         <br/>\n    //         <br/>\n    //         <button className=\"change followersbutton\" onClick={()=>{history.push(\"/Followers\")}}><i class=\"fa fa-user-friends\" ></i>Followers</button>\n    //         <br/>\n    //         <br/>\n    //         <button className=\"change followingbutton\" onClick={()=>{history.push(\"/Followings\")}}><i class=\"fa fa-user-plus\" ></i>Following</button>\n    //         <br/>\n    //         <br/>\n    //         <button className=\"change profilebutton\" onClick={()=>{history.push(\"/UserProfile/\"+localStorage.getItem(\"username\"))}}><i class=\"fa fa-user\"></i>Profile</button>\n    //         <br/>\n    //         <br/>\n    //         <button className=\"tweetbutton\">Tweet</button>\n    //         <button type=\"button\"  className=\"buttonstyle\" onClick={this.removeitem}  >LogOut</button>\n    //         </div>  \n    //         <div className=\"rightpart\">\n    //         <div className=\"homestyle\">{first_name} {last_name}</div>\n    //      <div className=\"DF_username\">{username}</div>\n    //      <div className=\"BottomPart\"> </div>\n    //         {/* <input  className=\"styleofinput\" type=\"text\" value={content} onChange={this.showtweets}  placeholder={username}></input><br/>\n    //         <div className=\"messagestyling\">{message}</div> */}\n    //          <div><i class=\"fa fa-user-circle\"></i> </div> \n    //            <textarea value={content} onChange={this.showtweets} className=\"tweettextarea\" placeholder=\"What's happening\"></textarea> \n    //           <br/>\n    //         <button className=\"tweet_tweetbtn\" type=\"submit\" onClick={this.tweetcreate}  >Tweet</button>\n    //         <div className=\"error_message\">{message} </div> \n    //         <br/>\n    //         <br/>\n    //        <div className=\"BottomPart2\">  </div>\n    //     {/* <div className=\"outerdiv\">\n    //     {tweets.length? tweets.map(tweet=> <div key={tweet.id} id=\"size\" className=\"tweetstext1\">\n    //         <div className=\"usernamestyle\">{first_name}{last_name}@{username}\n    //         </div>{tweet.content}<div id=\"size2\" className=\"tweetstext2\"> \n    //         {tweet.created_date} </div><hr class=\"hrstyle1\"></hr></div>):null}</div> */}\n    //     <div className=\"timeline\">\n    //     {tweets.length? tweets.map(tweet=><div key={tweet.id} className=\"Tofocus\" >\n    //     <div className=\"timelineuserstyle\"><i class=\"fa fa-user-circle\"></i> </div><div className=\"timelinetext1\">{first_name} {last_name}  @{username}</div> \n    //    <div className=\"contentstyle\">{tweet.content}</div><div className=\"bottomline\"></div></div>):null}</div>\n    // <div className=\"messagestyling\">{message2}</div>\n    //   </div>    \n    //   <i class=\"fa fa-search\" area-hidden=\"true\"></i>  \n    //       <input type=\"text\" value={query} onChange={this.changeserach} className=\"searchbox\" placeholder=\"Search Mini-twitter\" ></input>\n    //       <button className=\"Searchbtn\" onClick={this.searchapi}>Search</button>\n    //       <br/><br/><br/><br/>\n    //       <div className=\"search_div\">{userdata.map (user=><div key={user.id}><div className=\"timelineuserstyle\"><i class=\"fa fa-user-circle\"></i> </div><div className=\"timelinetext1\">{user.first_name} {user.last_name}</div>\n    //     <div className=\"search_username\">@{user.username}\n    //     <div><button onClick={()=>this.followusers(user.follow,user.username)} className=\"textchange\">{user.follow==1?\"Unfollow\":\"Follow\"}</button></div><hr className=\"searchHr\"></hr>\n    //    </div></div>)}</div> \n    //         </div>\n    ;\n  }\n\n}\nexport default Tweets;","map":{"version":3,"sources":["/home/aishwarya/Desktop/Updated_backend/mini-twitter/frontend/src/components/Tweets.js"],"names":["React","Component","axios","Small_logo","history","TwitterLogo","Tweets","constructor","props","usernamechange","event","setState","username","target","value","tweetcreate","post","state","then","response","console","log","catch","e","status","message","data","showtweets","content","searchapi","userarray","userdata","error","error_message","token","changeserach","query","followusers","followfield","nameuser","obj","follow","localStorage","getItem","tweets","message2","first_name","last_name","componentDidMount","removeitem","removeItem","push","render","text","match","params","t"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Small_logo from \"./images/Small_logo.jpg\"\nimport './tweet.css'\nimport history from '../history'\nimport TwitterLogo from  \"./images/twitter.png\"\n\nexport class Tweets extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            token:localStorage.getItem(\"token\"),\n            content:\"\",\n            tweets:[],\n            username:\"\",\n            message:\"\",\n            message2:\"\",\n            first_name:\"\",\n            last_name:\"\",\n            userdata:[],\n            query:\"\"\n         \n            \n             \n        }\n    }\n  \n    usernamechange=(event)=>{\n        this.setState({username:event.target.value})\n    }\n    tweetcreate=()=>{\n        axios.post(\"http://127.0.0.1:8000/tweets/create/\",this.state).then(response=>{\n            console.log(response);\n        }).catch(e=>{\n            if(e.response.status=\"400\"){\n                this.setState({message:e.response.data[\"message\"]})\n            }\n              console.log(e.response);\n        })\n    }\n    showtweets=(event)=>{\n        this.setState({\n            content:event.target.value\n        })\n         \n    }\n    \n    \n    componentDidMount(){\n        axios.post(\"http://127.0.0.1:8000/profile/\",this.state).then(response=>{\n            if(response.status=\"200\"){\n                this.setState({username:response.data[\"username\"]})\n                this.setState({first_name:response.data[\"first_name\"]})\n                this.setState({last_name:response.data[\"last_name\"]})\n            }\n        })\n        axios.post(\" http://127.0.0.1:8000/tweets/\",this.state).then(response=>{\n      console.log(response);\n      if(response.status=\"200\"){\n          this.setState({tweets:response.data});\n      }\n    //   if(response.status=\"204\"){\n    //       this.setState({message2:\"zero tweets found\"})\n    //   }\n      \n        }).catch(error=>{\n            if(error.response.status=\"204\"){\n                this.setState({message2:\"Zero Tweets Found\"})\n            }\n            if(error.response.status=\"400\")\n            this.setState({message:error.response.data[\"message\"]})\n                console.log(error.response);\n        })\n       \n    }\n    searchapi=()=>{\n        axios.post(\"http://127.0.0.1:8000/search/\",this.state).then(response=>{\n            console.log(response);\n            \n            if(response.status=\"200\"){\n                \n                const userarray=response.data;\n                console.log(userarray);\n               \n                this.setState({userdata:userarray})\n            \n                console.log(this.state.userdata);\n             \n               \n    \n            }\n    \n            \n        }).catch(error=>{\n            console.log(error.response);\n             this.setState({error_message:error.response.data[\"message\"]})\n        })\n        console.log(this.state.token);\n    }\n\n    changeserach=(event)=>{\n        this.setState({query:event.target.value})\n    }\n    followusers=(followfield,nameuser)=>{\n        const obj={\n            follow:followfield,\n            username:nameuser,\n            token:this.state.token\n        }\n        if(obj.follow==1){\n            axios.post(\"http://127.0.0.1:8000/unfollow/\",obj).then(response=>{\n                console.log(response.data)\n            }).catch(error=>{\n     \n                console.log(error.response)\n            })\n           \n        }\n        else{\n            axios.post(\"http://127.0.0.1:8000/follow/\",obj).then(response=>{\n                console.log(response);\n            }).catch(error=>{\n                console.log(error.response);\n            })\n          \n        }\n    }\n    removeitem(){\n        localStorage.removeItem(\"token\");\n        {history.push(\"/Login\")}\n    }\n    render() {\n        const {content,tweets,message,username,message2,first_name,last_name,userdata,query}=this.state\n        const {text,match:{params}}=t\n        return (\n            <div></div>\n    //         <div>\n    //         <div className=\"leftpart\">\n    //         <button className=\"change homebutton\" onClick={()=>{history.push(\"/Timeline\")}}><i class=\"fa fa-home\"></i>Home</button>\n    //         <div className=\"twitter_logo\"><img src={TwitterLogo} ></img></div>  \n    //         <br/>\n    //         <br/>\n    //         <br/>\n    //         <br/>\n    //         <button className=\"change followersbutton\" onClick={()=>{history.push(\"/Followers\")}}><i class=\"fa fa-user-friends\" ></i>Followers</button>\n    //         <br/>\n    //         <br/>\n    //         <button className=\"change followingbutton\" onClick={()=>{history.push(\"/Followings\")}}><i class=\"fa fa-user-plus\" ></i>Following</button>\n    //         <br/>\n    //         <br/>\n    //         <button className=\"change profilebutton\" onClick={()=>{history.push(\"/UserProfile/\"+localStorage.getItem(\"username\"))}}><i class=\"fa fa-user\"></i>Profile</button>\n    //         <br/>\n    //         <br/>\n    //         <button className=\"tweetbutton\">Tweet</button>\n    //         <button type=\"button\"  className=\"buttonstyle\" onClick={this.removeitem}  >LogOut</button>\n    //         </div>  \n    //         <div className=\"rightpart\">\n    //         <div className=\"homestyle\">{first_name} {last_name}</div>\n    //      <div className=\"DF_username\">{username}</div>\n    //      <div className=\"BottomPart\"> </div>\n           \n           \n    //         {/* <input  className=\"styleofinput\" type=\"text\" value={content} onChange={this.showtweets}  placeholder={username}></input><br/>\n    //         <div className=\"messagestyling\">{message}</div> */}\n    //          <div><i class=\"fa fa-user-circle\"></i> </div> \n    //            <textarea value={content} onChange={this.showtweets} className=\"tweettextarea\" placeholder=\"What's happening\"></textarea> \n    //           <br/>\n    //         <button className=\"tweet_tweetbtn\" type=\"submit\" onClick={this.tweetcreate}  >Tweet</button>\n    //         <div className=\"error_message\">{message} </div> \n    //         <br/>\n    //         <br/>\n    //        <div className=\"BottomPart2\">  </div>\n    //     {/* <div className=\"outerdiv\">\n    //     {tweets.length? tweets.map(tweet=> <div key={tweet.id} id=\"size\" className=\"tweetstext1\">\n    //         <div className=\"usernamestyle\">{first_name}{last_name}@{username}\n    //         </div>{tweet.content}<div id=\"size2\" className=\"tweetstext2\"> \n    //         {tweet.created_date} </div><hr class=\"hrstyle1\"></hr></div>):null}</div> */}\n    //     <div className=\"timeline\">\n    //     {tweets.length? tweets.map(tweet=><div key={tweet.id} className=\"Tofocus\" >\n    //     <div className=\"timelineuserstyle\"><i class=\"fa fa-user-circle\"></i> </div><div className=\"timelinetext1\">{first_name} {last_name}  @{username}</div> \n    //    <div className=\"contentstyle\">{tweet.content}</div><div className=\"bottomline\"></div></div>):null}</div>\n    // <div className=\"messagestyling\">{message2}</div>\n    \n    //   </div>    \n    //   <i class=\"fa fa-search\" area-hidden=\"true\"></i>  \n    //       <input type=\"text\" value={query} onChange={this.changeserach} className=\"searchbox\" placeholder=\"Search Mini-twitter\" ></input>\n         \n    //       <button className=\"Searchbtn\" onClick={this.searchapi}>Search</button>\n    //       <br/><br/><br/><br/>\n    //       <div className=\"search_div\">{userdata.map (user=><div key={user.id}><div className=\"timelineuserstyle\"><i class=\"fa fa-user-circle\"></i> </div><div className=\"timelinetext1\">{user.first_name} {user.last_name}</div>\n    //     <div className=\"search_username\">@{user.username}\n    //     <div><button onClick={()=>this.followusers(user.follow,user.username)} className=\"textchange\">{user.follow==1?\"Unfollow\":\"Follow\"}</button></div><hr className=\"searchHr\"></hr>\n    //    </div></div>)}</div> \n\n    //         </div>\n        )\n    }\n}\n\nexport default Tweets\n"]},"metadata":{},"sourceType":"module"}